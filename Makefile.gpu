##########################################################
## CC compiler options

CC=g++
CC_FLAGS= -Wall -pedantic -O3 -fomit-frame-pointer -fstrict-aliasing -ffast-math -std=c++11 -mavx
CC_LIBS=

##########################################################
## Sources

SRC_DIR = .
OBJ_DIR = .
INC_DIR = .
CC_SRCS = main.cpp magics.cpp bitboards.cpp position.cpp hashtable.cpp uci.cpp zobrist.cpp
CU_SRCS = test.cu

##########################################################
# NVCC compiler options:

CUDA_ROOT_DIR=/usr/local/cuda
NVCC=nvcc
NVCC_FLAGS=-Xptxas -O3 -rdc=true -std=c++11
NVCC_LIBS=
CUDA_LIB_DIR= -L$(CUDA_ROOT_DIR)/lib64
CUDA_INC_DIR= -I$(CUDA_ROOT_DIR)/include
CUDA_LINK_LIBS= -lcudart

##########################################################

EXE = chess-gpu.exe

CC_OBJS = $(CC_SRCS:%.cpp=%.o)
CU_OBJS = $(CU_SRCS:%.cu=%.o)

OBJS = $(CC_OBJS) $(CU_OBJS)
LINK = $(CC_LIBS) $(CUDA_INC_DIR) $(CUDA_LIB_DIR) $(CUDA_LINK_LIBS)

$(EXE) : $(OBJS)
	$(CC) $(CC_FLAGS) $(OBJS) -o $@ $(LINK)

$(OBJ_DIR)/%.o : %.cpp
	$(CC) $(CC_FLAGS) -c $< -o $@

$(OBJ_DIR)/%.o : $(SRC_DIR)/%.cu
	$(NVCC) $(NVCC_FLAGS) -c $< -o $@ $(NVCC_LIBS)
